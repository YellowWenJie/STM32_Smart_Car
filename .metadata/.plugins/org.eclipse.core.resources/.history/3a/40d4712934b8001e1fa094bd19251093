/*
 * motor.c
 *
 *  Created on: Jan 21, 2024
 *      Author: YellowWenJie
 */

#include "motor.h"
#include "tim.h"

/*
 *	函数功能：电机正反转
 */
static void Motor(Motor_Single motor_single, uint8_t num)
{

  switch (motor_single)
  {
  case Front_Left:
    if (num == 1)
    {
      HAL_GPIO_WritePin(Front_AIN1_GPIO_Port, Front_AIN1_Pin, GPIO_PIN_RESET); // 0
      HAL_GPIO_WritePin(Front_AIN2_GPIO_Port, Front_AIN2_Pin, GPIO_PIN_SET);   // 1
    }
    else
    {
      HAL_GPIO_WritePin(Front_AIN1_GPIO_Port, Front_AIN1_Pin, GPIO_PIN_SET);   // 01
      HAL_GPIO_WritePin(Front_AIN2_GPIO_Port, Front_AIN2_Pin, GPIO_PIN_RESET); // 0
    }
    break;

  case Front_Right:
    if (num == 1)
    {
      HAL_GPIO_WritePin(Front_BIN1_GPIO_Port, Front_BIN1_Pin, GPIO_PIN_RESET); // 0
      HAL_GPIO_WritePin(Front_BIN2_GPIO_Port, Front_BIN2_Pin, GPIO_PIN_SET);   // 1
    }
    else
    {
      HAL_GPIO_WritePin(Front_BIN1_GPIO_Port, Front_BIN1_Pin, GPIO_PIN_SET);   // 1
      HAL_GPIO_WritePin(Front_BIN2_GPIO_Port, Front_BIN2_Pin, GPIO_PIN_RESET); // 0
    }
    break;

  case Back_Left:
    if (num == 1)
    {
      HAL_GPIO_WritePin(Back_AIN1_GPIO_Port, Back_AIN1_Pin, GPIO_PIN_RESET); // 0
      HAL_GPIO_WritePin(Back_AIN2_GPIO_Port, Back_AIN2_Pin, GPIO_PIN_SET);   // 1
    }
    else
    {
      HAL_GPIO_WritePin(Back_AIN1_GPIO_Port, Back_AIN1_Pin, GPIO_PIN_SET);   // 1
      HAL_GPIO_WritePin(Back_AIN2_GPIO_Port, Back_AIN2_Pin, GPIO_PIN_RESET); // 0
    }
    break;

  case Back_Right:
    if (num == 1)
    {
      HAL_GPIO_WritePin(Back_BIN1_GPIO_Port, Back_BIN1_Pin, GPIO_PIN_RESET); // 0
      HAL_GPIO_WritePin(Back_BIN2_GPIO_Port, Back_BIN2_Pin, GPIO_PIN_SET);   // 1
    }
    else
    {
      HAL_GPIO_WritePin(Back_BIN1_GPIO_Port, Back_BIN1_Pin, GPIO_PIN_SET);   // 1
      HAL_GPIO_WritePin(Back_BIN2_GPIO_Port, Back_BIN2_Pin, GPIO_PIN_RESET); // 0
    }
    break;
  }
}

/*
 *	函数功能：取绝对值
 */
static int myabs(uint32_t num)
{
  int temp;
  if (num < 0)
    temp = -num;
  else
    temp = num;
  return temp;
}

void Set_Pwm(Motor_Single motor_single, uint32_t pwm)
{

  int pwmb_abs;
  if (pwm > 1)
  {
    Motor(motor_single, 1);
  }
  else
  {
    Motor(motor_single, 0);
  }

  pwmb_abs = myabs(pwm);

  switch (motor_single)
  {
  case Front_Left:
    __HAL_TIM_SET_COMPARE(&htim1, TIM_CHANNEL_1, pwmb_abs);
    break;

  case Front_Right:
    __HAL_TIM_SET_COMPARE(&htim1, TIM_CHANNEL_2, pwmb_abs);
    break;
  case Back_Left:
    __HAL_TIM_SET_COMPARE(&htim1, TIM_CHANNEL_3, pwmb_abs);
    break;
  case Back_Right:
    __HAL_TIM_SET_COMPARE(&htim1, TIM_CHANNEL_4, pwmb_abs);
    break;
  }
}